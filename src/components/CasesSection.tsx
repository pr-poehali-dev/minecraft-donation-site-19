import { useState, useMemo } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import Icon from '@/components/ui/icon';
import { Server } from '@/data/privilegesData';
import { useToast } from '@/hooks/use-toast';

interface CasesSectionProps {
  servers: Server[];
  selectedServer: string;
  onServerChange: (serverId: string) => void;
  userNickname?: string | null;
}

interface Case {
  id: string;
  name: string;
  price: number;
  icon: string;
  color: string;
  description: string;
  rewards: string[];
}

const anarchyCases: Case[] = [
  {
    id: 'starter',
    name: '–°—Ç–∞—Ä—Ç–æ–≤—ã–π –∫–µ–π—Å',
    price: 33,
    icon: 'Package',
    color: 'from-gray-600 to-gray-800',
    description: '–ë–∞–∑–æ–≤—ã–µ —Ä–µ—Å—É—Ä—Å—ã –¥–ª—è —Å—Ç–∞—Ä—Ç–∞',
    rewards: ['–ñ–µ–ª–µ–∑–Ω–∞—è –±—Ä–æ–Ω—è', '–ù–∞–±–æ—Ä –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤', '–ï–¥–∞ x32', '–§–∞–∫–µ–ª—ã x64']
  },
  {
    id: 'rare',
    name: '–†–µ–¥–∫–∏–π –∫–µ–π—Å',
    price: 98,
    icon: 'Gift',
    color: 'from-blue-600 to-blue-800',
    description: '–¶–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –∏ —Ä–µ—Å—É—Ä—Å—ã',
    rewards: ['–ê–ª–º–∞–∑–Ω–∞—è –±—Ä–æ–Ω—è', '–ó–∞—á–∞—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã', '–ò–∑—É–º—Ä—É–¥—ã x16', '–ó–æ–ª–æ—Ç—ã–µ —è–±–ª–æ–∫–∏ x8']
  },
  {
    id: 'epic',
    name: '–≠–ø–∏—á–µ—Å–∫–∏–π –∫–µ–π—Å',
    price: 228,
    icon: 'Sparkles',
    color: 'from-purple-600 to-purple-800',
    description: '–ú–æ—â–Ω—ã–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã',
    rewards: ['–ù–µ–∑–µ—Ä–∏—Ç–æ–≤–∞—è –±—Ä–æ–Ω—è', '–≠–ª–∏—Ç—Ä–æ–≤—ã –∫—Ä—ã–ª—å—è', '–¢–æ—Ç–µ–º –±–µ—Å—Å–º–µ—Ä—Ç–∏—è x3', '–°—É–Ω–¥—É–∫-—à–∞–ª–∫–µ—Ä']
  },
  {
    id: 'legendary',
    name: '–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π –∫–µ–π—Å',
    price: 488,
    icon: 'Trophy',
    color: 'from-yellow-500 to-orange-600',
    description: '–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã',
    rewards: ['–ü–æ–ª–Ω—ã–π –Ω–µ–∑–µ—Ä–∏—Ç —Å –∑–∞—á–∞—Ä–∞–º–∏', '–ú–∞—è–∫ + –±–ª–æ–∫–∏', '–ó–≤–µ–∑–¥–∞ –Ω–µ–∑–µ—Ä–∞ x5', '–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–µ–ª—å—è']
  },
  {
    id: 'mythic',
    name: '–ú–∏—Ñ–∏—á–µ—Å–∫–∏–π –∫–µ–π—Å',
    price: 975,
    icon: 'Crown',
    color: 'from-red-600 to-pink-700',
    description: '–°–æ–∫—Ä–æ–≤–∏—â–∞ –±–æ–≥–æ–≤',
    rewards: ['–ö–∞—Å—Ç–æ–º–Ω–æ–µ –æ—Ä—É–∂–∏–µ', '–†–µ–¥–∫–∏–µ –ø–∏—Ç–æ–º—Ü—ã', '–ö—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ –±–ª–æ–∫–∏', '–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å–∫–∏–Ω—ã']
  }
];

const survivalCases: Case[] = [
  {
    id: 'privilege_knight',
    name: '–ö–µ–π—Å "WARRIOR"',
    price: 130,
    icon: 'Sword',
    color: 'from-amber-600 to-amber-800',
    description: '–®–∞–Ω—Å –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–≤–∏–ª–µ–≥–∏—é',
    rewards: ['–ü—Ä–∏–≤–∏–ª–µ–≥–∏—è LITE (60%)', '–ü—Ä–∏–≤–∏–ª–µ–≥–∏—è WARRIOR (30%)', '–ü—Ä–∏–≤–∏–ª–µ–≥–∏—è ELITE (10%)', '100 –∫–æ–π–Ω–æ–≤ (–±–æ–Ω—É—Å)']
  },
  {
    id: 'privilege_guardian',
    name: '–ö–µ–π—Å "ELITE"',
    price: 325,
    icon: 'Shield',
    color: 'from-blue-600 to-blue-800',
    description: '–ü–æ–≤—ã—à–µ–Ω–Ω—ã–π —à–∞–Ω—Å —Ä–µ–¥–∫–∏—Ö –ø—Ä–∏–≤–∏–ª–µ–≥–∏–π',
    rewards: ['–ü—Ä–∏–≤–∏–ª–µ–≥–∏—è WARRIOR (40%)', '–ü—Ä–∏–≤–∏–ª–µ–≥–∏—è ELITE (35%)', '–ü—Ä–∏–≤–∏–ª–µ–≥–∏—è TITAN (20%)', '–ü—Ä–∏–≤–∏–ª–µ–≥–∏—è MASTER (5%)']
  },
  {
    id: 'privilege_titan',
    name: '–ö–µ–π—Å "TITAN"',
    price: 650,
    icon: 'Mountain',
    color: 'from-cyan-600 to-cyan-800',
    description: '–í—ã—Å–æ–∫–∏–µ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏',
    rewards: ['–ü—Ä–∏–≤–∏–ª–µ–≥–∏—è ELITE (30%)', '–ü—Ä–∏–≤–∏–ª–µ–≥–∏—è TITAN (40%)', '–ü—Ä–∏–≤–∏–ª–µ–≥–∏—è MASTER (25%)', '–ü—Ä–∏–≤–∏–ª–µ–≥–∏—è LEGEND (5%)']
  },
  {
    id: 'privilege_master',
    name: '–ö–µ–π—Å "MASTER"',
    price: 1300,
    icon: 'Wand2',
    color: 'from-purple-600 to-purple-800',
    description: '–≠–ª–∏—Ç–Ω—ã–µ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏',
    rewards: ['–ü—Ä–∏–≤–∏–ª–µ–≥–∏—è TITAN (25%)', '–ü—Ä–∏–≤–∏–ª–µ–≥–∏—è MASTER (40%)', '–ü—Ä–∏–≤–∏–ª–µ–≥–∏—è LEGEND (30%)', '–ü—Ä–∏–≤–∏–ª–µ–≥–∏—è OVERLORD (5%)']
  },
  {
    id: 'privilege_legend',
    name: '–ö–µ–π—Å "LEGEND"',
    price: 3250,
    icon: 'Crown',
    color: 'from-yellow-400 to-yellow-600',
    description: '–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–µ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏',
    rewards: ['–ü—Ä–∏–≤–∏–ª–µ–≥–∏—è MASTER (25%)', '–ü—Ä–∏–≤–∏–ª–µ–≥–∏—è LEGEND (35%)', '–ü—Ä–∏–≤–∏–ª–µ–≥–∏—è OVERLORD (25%)', '–ü—Ä–∏–≤–∏–ª–µ–≥–∏—è PHOENIX (12%)', '–ü—Ä–∏–≤–∏–ª–µ–≥–∏—è YOUTUBE (3%)']
  }
];

const CasesSection = ({ servers, selectedServer, onServerChange, userNickname }: CasesSectionProps) => {
  const cases = useMemo(() => {
    if (selectedServer === 'anarchy') return anarchyCases;
    if (selectedServer === 'survival') return survivalCases;
    return [];
  }, [selectedServer]);

  const [quantities, setQuantities] = useState<Record<string, number>>({});
  const { toast } = useToast();

  useMemo(() => {
    setQuantities(cases.reduce((acc, c) => ({ ...acc, [c.id]: 1 }), {}));
  }, [cases]);

  const handleQuantityChange = (caseId: string, delta: number) => {
    setQuantities(prev => ({
      ...prev,
      [caseId]: Math.max(1, Math.min(99, (prev[caseId] || 1) + delta))
    }));
  };

  const handlePurchase = (caseItem: Case) => {
    const quantity = quantities[caseItem.id] || 1;
    const totalPrice = caseItem.price * quantity;

    if (!userNickname) {
      toast({
        title: '–û—à–∏–±–∫–∞',
        description: '–°–Ω–∞—á–∞–ª–∞ —É–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π –Ω–∏–∫ –≤ –∏–≥—Ä–µ',
        variant: 'destructive'
      });
      return;
    }

    toast({
      title: '–ü–æ–∫—É–ø–∫–∞ –∫–µ–π—Å–æ–≤',
      description: `${caseItem.name} x${quantity} –¥–ª—è ${userNickname} - ${totalPrice}‚ÇΩ. –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –æ–ø–ª–∞—Ç—É...`
    });
  };

  const availableServers = servers.filter(s => s.id === 'anarchy' || s.id === 'survival');

  if (selectedServer === 'skywars') {
    return (
      <section className="container mx-auto px-4 py-16 animate-fade-in">
        <h2 className="text-5xl font-extrabold text-center text-white mb-8 minecraft-shadow">
          –ü–æ–∫—É–ø–∫–∞ –∫–µ–π—Å–æ–≤
        </h2>
        
        <div className="flex justify-center gap-4 mb-12 flex-wrap">
          {servers.map(server => (
            <button
              key={server.id}
              onClick={() => onServerChange(server.id)}
              className={`flex items-center gap-3 px-8 py-4 font-bold text-lg transition-all duration-200 border-4 border-black ${
                selectedServer === server.id
                  ? `bg-gradient-to-br ${server.color} text-white shadow-2xl scale-110`
                  : 'bg-[#3A3A3A] text-gray-300 hover:bg-[#4A4A4A]'
              }`}
            >
              <Icon name={server.icon} size={24} />
              {server.name}
            </button>
          ))}
        </div>

        <div className="max-w-2xl mx-auto text-center">
          <Card className="bg-[#2C2C2C] border-4 border-black">
            <CardContent className="p-12">
              <Icon name="Package" size={64} className="text-gray-500 mx-auto mb-6" />
              <h3 className="text-3xl font-bold text-white mb-4">–ö–µ–π—Å—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã</h3>
              <p className="text-gray-400 text-lg">
                –ù–∞ —Ä–µ–∂–∏–º–µ –°–∫–∞–π–≤–∞—Ä—Å –∫–µ–π—Å—ã –Ω–µ –ø—Ä–æ–¥–∞—é—Ç—Å—è. –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –ê–Ω–∞—Ä—Ö–∏—è –∏–ª–∏ –í—ã–∂–∏–≤–∞–Ω–∏–µ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –∫–µ–π—Å–æ–≤.
              </p>
            </CardContent>
          </Card>
        </div>
      </section>
    );
  }

  return (
    <section className="container mx-auto px-4 py-16 animate-fade-in">
      <h2 className="text-5xl font-extrabold text-center text-white mb-8 minecraft-shadow">
        –ü–æ–∫—É–ø–∫–∞ –∫–µ–π—Å–æ–≤
      </h2>
      
      <div className="mb-8 max-w-3xl mx-auto bg-gradient-to-r from-red-600 to-orange-600 border-4 border-black p-6 text-center animate-pulse">
        <div className="flex items-center justify-center gap-3 mb-2">
          <Icon name="Sparkles" size={32} className="text-yellow-300" />
          <h3 className="text-3xl font-extrabold text-white minecraft-shadow">–°–ö–ò–î–ö–ê 35%!</h3>
          <Icon name="Sparkles" size={32} className="text-yellow-300" />
        </div>
        <p className="text-white text-xl font-bold">
          üéâ –í —á–µ—Å—Ç—å –æ—Ç–∫—Ä—ã—Ç–∏—è —Å–µ—Ä–≤–µ—Ä–∞! üéâ
        </p>
        <p className="text-yellow-200 text-lg mt-2">
          –£—Å–ø–µ–π –∫—É–ø–∏—Ç—å –∫–µ–π—Å—ã –ø–æ –≤—ã–≥–æ–¥–Ω–æ–π —Ü–µ–Ω–µ!
        </p>
      </div>

      <p className="text-center text-gray-300 text-lg mb-12 max-w-2xl mx-auto">
        {selectedServer === 'anarchy' 
          ? '–û—Ç–∫—Ä—ã–≤–∞–π –∫–µ–π—Å—ã –∏ –ø–æ–ª—É—á–∞–π —Ä–µ–¥–∫–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã, –æ—Ä—É–∂–∏–µ –∏ —Ä–µ—Å—É—Ä—Å—ã! –ß–µ–º –≤—ã—à–µ —É—Ä–æ–≤–µ–Ω—å –∫–µ–π—Å–∞ - —Ç–µ–º –∫—Ä—É—á–µ –Ω–∞–≥—Ä–∞–¥—ã.'
          : '–û—Ç–∫—Ä—ã–≤–∞–π –∫–µ–π—Å—ã –∏ –ø–æ–ª—É—á–∞–π –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏ —Å–æ —Å–∫–∏–¥–∫–æ–π! –ò—Å–ø—ã—Ç–∞–π —É–¥–∞—á—É –∏ –≤—ã–∏–≥—Ä–∞–π —Ç–æ–ø–æ–≤—É—é –ø—Ä–∏–≤–∏–ª–µ–≥–∏—é!'
        }
      </p>

      <div className="flex justify-center gap-4 mb-12 flex-wrap">
        {availableServers.map(server => (
          <button
            key={server.id}
            onClick={() => onServerChange(server.id)}
            className={`flex items-center gap-3 px-8 py-4 font-bold text-lg transition-all duration-200 border-4 border-black ${
              selectedServer === server.id
                ? `bg-gradient-to-br ${server.color} text-white shadow-2xl scale-110`
                : 'bg-[#3A3A3A] text-gray-300 hover:bg-[#4A4A4A]'
            }`}
          >
            <Icon name={server.icon} size={24} />
            {server.name}
          </button>
        ))}
      </div>

      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        {cases.map(caseItem => (
          <Card 
            key={caseItem.id}
            className="bg-[#2C2C2C] border-4 border-black hover:scale-105 transition-all duration-300"
          >
            <CardHeader>
              <div className={`w-20 h-20 bg-gradient-to-br ${caseItem.color} rounded-lg flex items-center justify-center mb-4 mx-auto border-4 border-black`}>
                <Icon name={caseItem.icon} size={40} className="text-white" />
              </div>
              <CardTitle className="text-white text-2xl text-center">{caseItem.name}</CardTitle>
              <CardDescription className="text-gray-400 text-center">{caseItem.description}</CardDescription>
            </CardHeader>
            <CardContent>
              <div className="mb-6">
                <h4 className="text-white font-bold mb-3 flex items-center gap-2">
                  <Icon name="Gift" size={18} className="text-yellow-400" />
                  –í–æ–∑–º–æ–∂–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã:
                </h4>
                <ul className="space-y-2">
                  {caseItem.rewards.map((reward, idx) => (
                    <li key={idx} className="text-gray-300 flex items-center gap-2">
                      <Icon name="Check" size={16} className="text-green-400" />
                      {reward}
                    </li>
                  ))}
                </ul>
              </div>

              <div className="mb-4">
                <div className="flex items-center justify-between mb-2">
                  <span className="text-gray-400 font-medium">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:</span>
                  <div className="flex items-center gap-3 bg-[#1A1A1A] border-2 border-black px-3 py-2">
                    <button
                      onClick={() => handleQuantityChange(caseItem.id, -1)}
                      className="text-white hover:text-primary transition-colors"
                    >
                      <Icon name="Minus" size={20} />
                    </button>
                    <span className="text-white font-bold text-xl min-w-[40px] text-center">
                      {quantities[caseItem.id] || 1}
                    </span>
                    <button
                      onClick={() => handleQuantityChange(caseItem.id, 1)}
                      className="text-white hover:text-primary transition-colors"
                    >
                      <Icon name="Plus" size={20} />
                    </button>
                  </div>
                </div>
              </div>

              <div className="flex items-center justify-between mb-4">
                <span className="text-gray-400 font-medium">–¶–µ–Ω–∞ –∑–∞ 1 —à—Ç:</span>
                <span className="text-white font-bold text-xl">{caseItem.price}‚ÇΩ</span>
              </div>

              <div className="flex items-center justify-between mb-6 p-4 bg-[#1A1A1A] border-2 border-primary">
                <span className="text-primary font-bold text-lg">–ò—Ç–æ–≥–æ:</span>
                <span className="text-primary font-bold text-2xl">
                  {caseItem.price * (quantities[caseItem.id] || 1)}‚ÇΩ
                </span>
              </div>

              <Button
                onClick={() => handlePurchase(caseItem)}
                className="w-full bg-primary hover:bg-primary/90 text-white font-bold text-lg py-6 border-4 border-black"
              >
                <Icon name="ShoppingCart" size={24} className="mr-2" />
                –ö—É–ø–∏—Ç—å {quantities[caseItem.id] || 1} —à—Ç.
              </Button>
            </CardContent>
          </Card>
        ))}
      </div>

      <div className="mt-12 bg-gradient-to-r from-yellow-900/30 to-orange-900/30 border-4 border-black p-8 text-center">
        <Icon name="Info" size={32} className="text-yellow-400 mx-auto mb-4" />
        <h3 className="text-2xl font-bold text-white mb-3">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–µ–π—Å–∞—Ö</h3>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6 text-gray-300">
          <div>
            <Icon name="Package" size={24} className="text-primary mx-auto mb-2" />
            <p className="font-semibold">–ú–æ–º–µ–Ω—Ç–∞–ª—å–Ω–∞—è –≤—ã–¥–∞—á–∞</p>
            <p className="text-sm">–ö–µ–π—Å—ã –ø–æ—è–≤—è—Ç—Å—è –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã</p>
          </div>
          <div>
            <Icon name="Shuffle" size={24} className="text-primary mx-auto mb-2" />
            <p className="font-semibold">–°–ª—É—á–∞–π–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã</p>
            <p className="text-sm">
              {selectedServer === 'anarchy' 
                ? '–ö–∞–∂–¥—ã–π –∫–µ–π—Å —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —Å–ø–∏—Å–∫–∞'
                : '–®–∞–Ω—Å –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–≤–∏–ª–µ–≥–∏—é –≤—ã—à–µ, —á–µ–º –µ—ë —Å—Ç–æ–∏–º–æ—Å—Ç—å'
              }
            </p>
          </div>
          <div>
            <Icon name="TrendingUp" size={24} className="text-primary mx-auto mb-2" />
            <p className="font-semibold">
              {selectedServer === 'anarchy' ? '–í—ã–≥–æ–¥–Ω—ã–µ –Ω–∞–±–æ—Ä—ã' : '–≠–∫–æ–Ω–æ–º–∏—è –¥–æ 70%'}
            </p>
            <p className="text-sm">
              {selectedServer === 'anarchy'
                ? '–ü–æ–∫—É–ø–∫–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∫–µ–π—Å–æ–≤ —Å—Ä–∞–∑—É —ç–∫–æ–Ω–æ–º–∏—Ç –≤—Ä–µ–º—è'
                : '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Ä–æ–≥—É—é –ø—Ä–∏–≤–∏–ª–µ–≥–∏—é –∑–∞ –º–µ–Ω—å—à—É—é —Ü–µ–Ω—É'
              }
            </p>
          </div>
        </div>
      </div>
    </section>
  );
};

export default CasesSection;